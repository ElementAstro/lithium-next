[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "auto_updater"
description = "Advanced automatic update system for software applications"
readme = "README.md"
authors = [{ name = "AI Assistant", email = "ai@example.com" }]
requires-python = ">=3.8"
keywords = ["updater", "software", "download", "update", "installer"]
license = { text = "MIT" }
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Software Distribution",
    "Topic :: Utilities",
]
dynamic = ["version"]
dependencies = ["loguru>=0.6.0", "requests>=2.28.0", "tqdm>=4.64.0"]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=3.0.0",
    "black>=22.3.0",
    "isort>=5.10.1",
    "mypy>=0.950",
    "flake8>=4.0.1",
    "types-requests",
    "pre-commit>=2.18.0",
]
docs = [
    "sphinx>=4.5.0",
    "sphinx-rtd-theme>=1.0.0",
    "sphinx-autodoc-typehints>=1.18.0",
]

[project.urls]
Documentation = "https://github.com/example/auto_updater"
Source = "https://github.com/example/auto_updater"
Issues = "https://github.com/example/auto_updater/issues"

[project.scripts]
auto-updater = "auto_updater.cli:main"

[tool.setuptools_scm]
write_to = "auto_updater/_version.py"

[tool.setuptools]
packages = ["auto_updater"]

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = "test_*.py"
addopts = "--cov=auto_updater --cov-report=term-missing --cov-report=xml -v"

[tool.coverage.run]
source = ["auto_updater"]
omit = ["*/__init__.py", "*/_version.py", "*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
